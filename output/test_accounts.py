import pytest\nfrom accounts import Account, get_share_price\n\nclass TestAccount:\n    def setup_method(self):\n        self.account = Account(user_id='test_user', initial_deposit=1000.0, language='EN')\n\n    def test_deposit_success(self):\n        assert self.account.deposit(500) == 'Deposit successful.\\n存款成功。'\n        assert self.account.balance == 1500.0\n\n    def test_deposit_negative(self):\n        assert self.account.deposit(-100) == 'Deposit amount must be positive.\\n存款金额必须为正数。'\n        assert self.account.balance == 1000.0\n\n    def test_withdraw_success(self):\n        assert self.account.withdraw(200) == 'Withdrawal successful.\\n提款成功。'\n        assert self.account.balance == 800.0\n\n    def test_withdraw_insufficient_funds(self):\n        assert self.account.withdraw(1000) == 'Insufficient funds for withdrawal.\\n提款金额不足。'\n        assert self.account.balance == 800.0\n\n    def test_buy_shares_success(self):\n        assert self.account.buy_shares('AAPL', 2) == 'Purchased 2 shares of AAPL at 150.0 per share.\\n以每股150.0的价格购买了2股AAPL。'\n        assert self.account.balance == 700.0\n        assert self.account.holdings['AAPL'] == 2\n\n    def test_sell_shares_success(self):\n        self.account.buy_shares('AAPL', 2)\n        assert self.account.sell_shares('AAPL', 2) == 'Sold 2 shares of AAPL at 150.0 per share.\\n以每股150.0的价格售出了2股AAPL。'\n        assert self.account.balance == 800.0\n        assert 'AAPL' not in self.account.holdings\n\n    def test_buy_shares_insufficient_funds(self):\n        assert self.account.buy_shares('AAPL', 10) == 'Insufficient funds to buy shares.\\n资金不足以购买股票。'\n        assert self.account.balance == 1000.0\n\n    def test_report_holdings_empty(self):\n        assert self.account.report_holdings() == \"You don't have any holdings.\\n您没有任何持股。\"\n\n    def test_report_profit_and_loss_break_even(self):\n        assert self.account.report_profit_and_loss() == 'Break even: $0.00\\n收支平衡：$0.00'\n\n    def test_current_stock_price(self):\n        assert self.account.get_current_stock_price('AAPL') == 'Current price of AAPL: $150.00\\nAAPL当前价格：$150.00'\n\n    def test_account_summary(self):\n        assert self.account.get_account_summary() == 'Account Summary for User test_user:\\nCash Balance: $1000.00\\nPortfolio Value: $0.00\\nTotal Value: $1000.00\\nProfit/Loss: $0.00\\n用户test_user的账户摘要：\\n现金余额：$1000.00\\n投资组合价值：$0.00\\n总价值：$1000.00\\n盈亏：$0.00'\n   \n    def test_list_transactions_empty(self):\n        assert self.account.list_transactions() == 'No transactions found.\\n未找到交易记录。'